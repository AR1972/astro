
; ----------------------------------------------------------

        PUBLIC  $M_CLS_3
        IF1
        %out    ... Including message Class C
        ENDIF

; ----------------------------------------------------------

$M_CLASS_C_STRUC LABEL BYTE
        $M_CLASS_ID <0FFH,EXPECTED_VERSION,Class_C_MessageCount>

; ----------------------------------------------------------


$M_C_00029H_STRUC LABEL BYTE
        $M_ID   <00029H,$M_C_00029H_MSG-$M_C_00029H_STRUC>

$M_C_0002AH_STRUC LABEL BYTE
        $M_ID   <0002AH,$M_C_0002AH_MSG-$M_C_0002AH_STRUC>

$M_C_0002BH_STRUC LABEL BYTE
        $M_ID   <0002BH,$M_C_0002BH_MSG-$M_C_0002BH_STRUC>

$M_C_0002CH_STRUC LABEL BYTE
        $M_ID   <0002CH,$M_C_0002CH_MSG-$M_C_0002CH_STRUC>

$M_C_0002DH_STRUC LABEL BYTE
        $M_ID   <0002DH,$M_C_0002DH_MSG-$M_C_0002DH_STRUC>

$M_C_0002EH_STRUC LABEL BYTE
        $M_ID   <0002EH,$M_C_0002EH_MSG-$M_C_0002EH_STRUC>

$M_C_0002FH_STRUC LABEL BYTE
        $M_ID   <0002FH,$M_C_0002FH_MSG-$M_C_0002FH_STRUC>

$M_C_00030H_STRUC LABEL BYTE
        $M_ID   <00030H,$M_C_00030H_MSG-$M_C_00030H_STRUC>

$M_C_00031H_STRUC LABEL BYTE
        $M_ID   <00031H,$M_C_00031H_MSG-$M_C_00031H_STRUC>

$M_C_00035H_STRUC LABEL BYTE
        $M_ID   <00035H,$M_C_00035H_MSG-$M_C_00035H_STRUC>

$M_C_00036H_STRUC LABEL BYTE
        $M_ID   <00036H,$M_C_00036H_MSG-$M_C_00036H_STRUC>

$M_C_00037H_STRUC LABEL BYTE
        $M_ID   <00037H,$M_C_00037H_MSG-$M_C_00037H_STRUC>

$M_C_00038H_STRUC LABEL BYTE
        $M_ID   <00038H,$M_C_00038H_MSG-$M_C_00038H_STRUC>

$M_C_0003AH_STRUC LABEL BYTE
        $M_ID   <0003AH,$M_C_0003AH_MSG-$M_C_0003AH_STRUC>

$M_C_0003BH_STRUC LABEL BYTE
        $M_ID   <0003BH,$M_C_0003BH_MSG-$M_C_0003BH_STRUC>

$M_C_0003CH_STRUC LABEL BYTE
        $M_ID   <0003CH,$M_C_0003CH_MSG-$M_C_0003CH_STRUC>

; ----------------------------------------------------------


$M_C_00029H_MSG LABEL BYTE
        DB      $M_C_00029H_END-$M_C_00029H_MSG-1
        DB      "   Entry has a bad size"
$M_C_00029H_END LABEL BYTE
  
$M_C_0002AH_MSG LABEL BYTE
        DB      $M_C_0002AH_END-$M_C_0002AH_MSG-1
        DB      "   Is cross linked on allocation unit %1"
$M_C_0002AH_END LABEL BYTE
  
$M_C_0002BH_MSG LABEL BYTE
        DB      $M_C_0002BH_END-$M_C_0002BH_MSG-1
        DB      "   Cannot CHDIR to %1,",CR,LF,"tree past this point not processed"
$M_C_0002BH_END LABEL BYTE
  
$M_C_0002CH_MSG LABEL BYTE
        DB      $M_C_0002CH_END-$M_C_0002CH_MSG-1
        DB      "   tree past this point not processed"
$M_C_0002CH_END LABEL BYTE
  
$M_C_0002DH_MSG LABEL BYTE
        DB      $M_C_0002DH_END-$M_C_0002DH_MSG-1
        DB      "%1 bytes disk space freed"
$M_C_0002DH_END LABEL BYTE
  
$M_C_0002EH_MSG LABEL BYTE
        DB      $M_C_0002EH_END-$M_C_0002EH_MSG-1
        DB      "%1 bytes disk space would be freed"
$M_C_0002EH_END LABEL BYTE
  
$M_C_0002FH_MSG LABEL BYTE
        DB      $M_C_0002FH_END-$M_C_0002FH_MSG-1
        DB      "Volume %1 created %2 %3",CR,LF
$M_C_0002FH_END LABEL BYTE
  
$M_C_00030H_MSG LABEL BYTE
        DB      $M_C_00030H_END-$M_C_00030H_MSG-1
        DB      "%1 total allocation units on disk"
$M_C_00030H_END LABEL BYTE
  
$M_C_00031H_MSG LABEL BYTE
        DB      $M_C_00031H_END-$M_C_00031H_MSG-1
        DB      "%1 bytes in each allocation unit"
$M_C_00031H_END LABEL BYTE
  
$M_C_00035H_MSG LABEL BYTE
        DB      $M_C_00035H_END-$M_C_00035H_MSG-1
        DB      "Invalid parameter"
$M_C_00035H_END LABEL BYTE
  
$M_C_00036H_MSG LABEL BYTE
        DB      $M_C_00036H_END-$M_C_00036H_MSG-1
        DB      "Invalid drive specification",CR,LF
$M_C_00036H_END LABEL BYTE
  
$M_C_00037H_MSG LABEL BYTE
        DB      $M_C_00037H_END-$M_C_00037H_MSG-1
        DB      "Path not found",CR,LF
$M_C_00037H_END LABEL BYTE
  
$M_C_00038H_MSG LABEL BYTE
        DB      $M_C_00038H_END-$M_C_00038H_MSG-1
        DB      "File not found",CR,LF
$M_C_00038H_END LABEL BYTE
  
$M_C_0003AH_MSG LABEL BYTE
        DB      $M_C_0003AH_END-$M_C_0003AH_MSG-1
        DB      "   %1 lost allocation units found in %2 chains."
$M_C_0003AH_END LABEL BYTE
  
$M_C_0003BH_MSG LABEL BYTE
        DB      $M_C_0003BH_END-$M_C_0003BH_MSG-1
        DB      CR,LF
$M_C_0003BH_END LABEL BYTE
  
$M_C_0003CH_MSG LABEL BYTE
        DB      $M_C_0003CH_END-$M_C_0003CH_MSG-1
        DB      "   Cannot CHDIR to root",CR,LF
$M_C_0003CH_END LABEL BYTE
  
; ----------------------------------------------------------

Class_C_MessageCount EQU     16

; ----------------------------------------------------------

        IF      FARmsg
$M_CLS_3 PROC FAR
        ELSE
$M_CLS_3 PROC NEAR
        ENDIF

        PUSH    CS
        POP     ES
        LEA     DI,$M_CLASS_C_STRUC
        ADD     CX,$-$M_CLASS_C_STRUC
        RET

$M_CLS_3 ENDP

; ----------------------------------------------------------

