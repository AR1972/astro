
; ----------------------------------------------------------

        PUBLIC  $M_CLS_1
        IF1
        %out    ... Including message Class A
        ENDIF

; ----------------------------------------------------------

$M_CLASS_A_STRUC LABEL BYTE
        $M_CLASS_ID <0FFH,EXPECTED_VERSION,Class_A_MessageCount>

; ----------------------------------------------------------


$M_A_00002H_STRUC LABEL BYTE
        $M_ID   <00002H,$M_A_00002H_MSG-$M_A_00002H_STRUC>

$M_A_00003H_STRUC LABEL BYTE
        $M_ID   <00003H,$M_A_00003H_MSG-$M_A_00003H_STRUC>

$M_A_00004H_STRUC LABEL BYTE
        $M_ID   <00004H,$M_A_00004H_MSG-$M_A_00004H_STRUC>

$M_A_00005H_STRUC LABEL BYTE
        $M_ID   <00005H,$M_A_00005H_MSG-$M_A_00005H_STRUC>

$M_A_00006H_STRUC LABEL BYTE
        $M_ID   <00006H,$M_A_00006H_MSG-$M_A_00006H_STRUC>

$M_A_00008H_STRUC LABEL BYTE
        $M_ID   <00008H,$M_A_00008H_MSG-$M_A_00008H_STRUC>

$M_A_00009H_STRUC LABEL BYTE
        $M_ID   <00009H,$M_A_00009H_MSG-$M_A_00009H_STRUC>

$M_A_0000AH_STRUC LABEL BYTE
        $M_ID   <0000AH,$M_A_0000AH_MSG-$M_A_0000AH_STRUC>

$M_A_0000BH_STRUC LABEL BYTE
        $M_ID   <0000BH,$M_A_0000BH_MSG-$M_A_0000BH_STRUC>

$M_A_0000CH_STRUC LABEL BYTE
        $M_ID   <0000CH,$M_A_0000CH_MSG-$M_A_0000CH_STRUC>

$M_A_0000DH_STRUC LABEL BYTE
        $M_ID   <0000DH,$M_A_0000DH_MSG-$M_A_0000DH_STRUC>

$M_A_0000EH_STRUC LABEL BYTE
        $M_ID   <0000EH,$M_A_0000EH_MSG-$M_A_0000EH_STRUC>

$M_A_0000FH_STRUC LABEL BYTE
        $M_ID   <0000FH,$M_A_0000FH_MSG-$M_A_0000FH_STRUC>

$M_A_0012CH_STRUC LABEL BYTE
        $M_ID   <0012CH,$M_A_0012CH_MSG-$M_A_0012CH_STRUC>

$M_A_0012DH_STRUC LABEL BYTE
        $M_ID   <0012DH,$M_A_0012DH_MSG-$M_A_0012DH_STRUC>

$M_A_0012EH_STRUC LABEL BYTE
        $M_ID   <0012EH,$M_A_0012EH_MSG-$M_A_0012EH_STRUC>

$M_A_0012FH_STRUC LABEL BYTE
        $M_ID   <0012FH,$M_A_0012FH_MSG-$M_A_0012FH_STRUC>

$M_A_00190H_STRUC LABEL BYTE
        $M_ID   <00190H,$M_A_00190H_MSG-$M_A_00190H_STRUC>

$M_A_00191H_STRUC LABEL BYTE
        $M_ID   <00191H,$M_A_00191H_MSG-$M_A_00191H_STRUC>

; ----------------------------------------------------------


$M_A_00002H_MSG LABEL BYTE
        DB      $M_A_00002H_END-$M_A_00002H_MSG-1
        DB      CR,LF,"File not found",CR,LF
$M_A_00002H_END LABEL BYTE
  
$M_A_00003H_MSG LABEL BYTE
        DB      $M_A_00003H_END-$M_A_00003H_MSG-1
        DB      CR,LF,"Cannot RECOVER an ASSIGNed or SUBSTed drive",CR,LF
$M_A_00003H_END LABEL BYTE
  
$M_A_00004H_MSG LABEL BYTE
        DB      $M_A_00004H_END-$M_A_00004H_MSG-1
        DB      CR,LF,"Invalid drive or file name",CR,LF
$M_A_00004H_END LABEL BYTE
  
$M_A_00005H_MSG LABEL BYTE
        DB      $M_A_00005H_END-$M_A_00005H_MSG-1
        DB      CR,LF,"WARNING - directory full",CR,LF
$M_A_00005H_END LABEL BYTE
  
$M_A_00006H_MSG LABEL BYTE
        DB      $M_A_00006H_END-$M_A_00006H_MSG-1
        DB      CR,LF,"Cannot RECOVER a network drive", CR,LF
$M_A_00006H_END LABEL BYTE
  
$M_A_00008H_MSG LABEL BYTE
        DB      $M_A_00008H_END-$M_A_00008H_MSG-1
        DB      CR,LF,"%1 file(s) recovered",CR,LF
$M_A_00008H_END LABEL BYTE
  
$M_A_00009H_MSG LABEL BYTE
        DB      $M_A_00009H_END-$M_A_00009H_MSG-1
        DB      CR,LF,"%1 of %2 bytes recovered",CR,LF
$M_A_00009H_END LABEL BYTE
  
$M_A_0000AH_MSG LABEL BYTE
        DB      $M_A_0000AH_END-$M_A_0000AH_MSG-1
        DB      CR,LF,"Press any key to begin recovery of the",CR,LF,"file(s) on drive %1",CR,LF,CR,LF
$M_A_0000AH_END LABEL BYTE
  
$M_A_0000BH_MSG LABEL BYTE
        DB      $M_A_0000BH_END-$M_A_0000BH_MSG-1
        DB      CR,LF,"Cannot read file allocation table",CR,LF
$M_A_0000BH_END LABEL BYTE
  
$M_A_0000CH_MSG LABEL BYTE
        DB      $M_A_0000CH_END-$M_A_0000CH_MSG-1
        DB      CR,LF,"Cannot write file allocation table",CR,LF
$M_A_0000CH_END LABEL BYTE
  
$M_A_0000DH_MSG LABEL BYTE
        DB      $M_A_0000DH_END-$M_A_0000DH_MSG-1
        DB      CR,LF
$M_A_0000DH_END LABEL BYTE
  
$M_A_0000EH_MSG LABEL BYTE
        DB      $M_A_0000EH_END-$M_A_0000EH_MSG-1
        DB      "Insufficient memory",CR,LF
$M_A_0000EH_END LABEL BYTE
  
$M_A_0000FH_MSG LABEL BYTE
        DB      $M_A_0000FH_END-$M_A_0000FH_MSG-1
        DB      "Incorrect DOS version",CR,LF
$M_A_0000FH_END LABEL BYTE
  
$M_A_0012CH_MSG LABEL BYTE
        DB      $M_A_0012CH_END-$M_A_0012CH_MSG-1
$M_A_0012CH_END LABEL BYTE
  
$M_A_0012DH_MSG LABEL BYTE
        DB      $M_A_0012DH_END-$M_A_0012DH_MSG-1
$M_A_0012DH_END LABEL BYTE
  
$M_A_0012EH_MSG LABEL BYTE
        DB      $M_A_0012EH_END-$M_A_0012EH_MSG-1
$M_A_0012EH_END LABEL BYTE
  
$M_A_0012FH_MSG LABEL BYTE
        DB      $M_A_0012FH_END-$M_A_0012FH_MSG-1
$M_A_0012FH_END LABEL BYTE
  
$M_A_00190H_MSG LABEL BYTE
        DB      $M_A_00190H_END-$M_A_00190H_MSG-1
$M_A_00190H_END LABEL BYTE
  
$M_A_00191H_MSG LABEL BYTE
        DB      $M_A_00191H_END-$M_A_00191H_MSG-1
$M_A_00191H_END LABEL BYTE
  
; ----------------------------------------------------------

Class_A_MessageCount EQU     19

; ----------------------------------------------------------

        IF      FARmsg
$M_CLS_1 PROC FAR
        ELSE
$M_CLS_1 PROC NEAR
        ENDIF

        PUSH    CS
        POP     ES
        LEA     DI,$M_CLASS_A_STRUC
        ADD     CX,$-$M_CLASS_A_STRUC
        RET

$M_CLS_1 ENDP

; ----------------------------------------------------------

